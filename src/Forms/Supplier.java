/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Forms;

import DataBase.CarCare_DB;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import Menus.TableCustom;
import Reports.Inventory_Report;
import Reports.Supplier_Report;
import Utill.InformTimer;
import Utill.RegX;
import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import notification.Notification;

/**
 *
 * @author Vimukthi
 */
public class Supplier extends javax.swing.JPanel {

    Supplier_Report supplier_Report = new Supplier_Report();
    /**
     * Creates new form Supplier
     */
    public Supplier() {
        initComponents();
        TableCustom.apply(jScrollPane1, TableCustom.TableType.DEFAULT);
        stb();
    }
    
    public void stb() {
    try {
        DefaultTableModel sts = (DefaultTableModel) S_table.getModel();
        sts.setRowCount(0);

        try (Statement tables = CarCare_DB.MyCon().createStatement();
             ResultSet result = tables.executeQuery("SELECT * FROM suppliers")) {

            while (result.next()) {
                Vector<Object> v = new Vector<>();
                v.add(result.getString("Supplier_ID"));
                v.add(result.getString("Name"));
                v.add(result.getString("NIC"));
                v.add(result.getString("Address"));
                v.add(result.getString("Contact_No"));
                v.add(result.getString("Email"));
            

                sts.addRow(v);
            }
        }
    } catch (SQLException e) {
        // Print or log the exception for debugging
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundPanel1 = new Menus.RoundPanel();
        roundPanel2 = new Menus.RoundPanel();
        SName = new textfield.TextField();
        SNIC = new textfield.TextField();
        SAddress = new textfield.TextField();
        SContact = new textfield.TextField();
        S_Delete_btn = new Menus.Button();
        S_Add_btn = new Menus.Button();
        S_Update_btn = new Menus.Button();
        SEmail = new textfield.TextField();
        SID_text = new javax.swing.JLabel();
        SID_show = new javax.swing.JLabel();
        Supplier_Search_Box = new Menus.custom_textfield();
        Supname = new javax.swing.JLabel();
        Snic = new javax.swing.JLabel();
        Saddress = new javax.swing.JLabel();
        Scnumber = new javax.swing.JLabel();
        Semail = new javax.swing.JLabel();
        roundPanel3 = new Menus.RoundPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        S_table = new javax.swing.JTable();
        supplier_print = new Menus.GradientButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(1000, 724));

        roundPanel1.setBackground(new java.awt.Color(102, 102, 102));
        roundPanel1.setPreferredSize(new java.awt.Dimension(1000, 750));

        roundPanel2.setBackground(new java.awt.Color(51, 51, 51));
        roundPanel2.setPreferredSize(new java.awt.Dimension(446, 717));

        SName.setBackground(new java.awt.Color(51, 51, 51));
        SName.setForeground(new java.awt.Color(255, 255, 255));
        SName.setCaretColor(new java.awt.Color(255, 255, 255));
        SName.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SName.setLabelText("Supplier Name");
        SName.setLineColor(new java.awt.Color(255, 153, 0));
        SName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SNameFocusLost(evt);
            }
        });

        SNIC.setBackground(new java.awt.Color(51, 51, 51));
        SNIC.setForeground(new java.awt.Color(255, 255, 255));
        SNIC.setCaretColor(new java.awt.Color(255, 255, 255));
        SNIC.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SNIC.setLabelText("NIC");
        SNIC.setLineColor(new java.awt.Color(255, 153, 0));
        SNIC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SNICFocusLost(evt);
            }
        });

        SAddress.setBackground(new java.awt.Color(51, 51, 51));
        SAddress.setForeground(new java.awt.Color(255, 255, 255));
        SAddress.setCaretColor(new java.awt.Color(255, 255, 255));
        SAddress.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SAddress.setLabelText("Address");
        SAddress.setLineColor(new java.awt.Color(255, 153, 0));
        SAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SAddressFocusLost(evt);
            }
        });

        SContact.setBackground(new java.awt.Color(51, 51, 51));
        SContact.setForeground(new java.awt.Color(255, 255, 255));
        SContact.setCaretColor(new java.awt.Color(255, 255, 255));
        SContact.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SContact.setLabelText("Contact Number");
        SContact.setLineColor(new java.awt.Color(255, 153, 0));
        SContact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SContactFocusLost(evt);
            }
        });

        S_Delete_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bin.png"))); // NOI18N
        S_Delete_btn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        S_Delete_btn.setLabel("DELETE");
        S_Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_Delete_btnActionPerformed(evt);
            }
        });

        S_Add_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        S_Add_btn.setText("ADD");
        S_Add_btn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        S_Add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_Add_btnActionPerformed(evt);
            }
        });

        S_Update_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh2.png"))); // NOI18N
        S_Update_btn.setText("UPDATE");
        S_Update_btn.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        S_Update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S_Update_btnActionPerformed(evt);
            }
        });

        SEmail.setBackground(new java.awt.Color(51, 51, 51));
        SEmail.setForeground(new java.awt.Color(255, 255, 255));
        SEmail.setCaretColor(new java.awt.Color(255, 255, 255));
        SEmail.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        SEmail.setLabelText("Email");
        SEmail.setLineColor(new java.awt.Color(255, 153, 0));
        SEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SEmailFocusLost(evt);
            }
        });

        SID_text.setBackground(new java.awt.Color(51, 51, 51));
        SID_text.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        SID_text.setForeground(new java.awt.Color(255, 255, 255));
        SID_text.setText("Supplier ID:");

        SID_show.setBackground(new java.awt.Color(51, 51, 51));
        SID_show.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        SID_show.setForeground(new java.awt.Color(153, 255, 102));

        Supplier_Search_Box.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Supplier_Search_BoxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout roundPanel2Layout = new javax.swing.GroupLayout(roundPanel2);
        roundPanel2.setLayout(roundPanel2Layout);
        roundPanel2Layout.setHorizontalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(roundPanel2Layout.createSequentialGroup()
                            .addComponent(SID_text)
                            .addGap(18, 18, 18)
                            .addComponent(SID_show, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(Supplier_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(roundPanel2Layout.createSequentialGroup()
                            .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(SEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, roundPanel2Layout.createSequentialGroup()
                                    .addComponent(S_Add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(S_Update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(S_Delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(SName, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SContact, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Supname, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Snic, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Saddress, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Scnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Semail, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        roundPanel2Layout.setVerticalGroup(
            roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Supplier_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SID_show, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SID_text, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(Supname, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(Snic, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(Saddress, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(Scnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Semail, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(roundPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(S_Update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S_Delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(S_Add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        roundPanel3.setBackground(new java.awt.Color(51, 51, 51));
        roundPanel3.setPreferredSize(new java.awt.Dimension(531, 439));

        S_table.setFont(new java.awt.Font("Montserrat", 0, 12)); // NOI18N
        S_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Supplier_ID", "Name", "NIC", "Address", "Contact_No", "Email"
            }
        ));
        S_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        S_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                S_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(S_table);

        javax.swing.GroupLayout roundPanel3Layout = new javax.swing.GroupLayout(roundPanel3);
        roundPanel3.setLayout(roundPanel3Layout);
        roundPanel3Layout.setHorizontalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                .addContainerGap())
        );
        roundPanel3Layout.setVerticalGroup(
            roundPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        supplier_print.setForeground(new java.awt.Color(255, 255, 255));
        supplier_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/report.gif"))); // NOI18N
        supplier_print.setText("Print Report");
        supplier_print.setEndGradientColor(new java.awt.Color(102, 204, 255));
        supplier_print.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        supplier_print.setShadowColor(new java.awt.Color(51, 51, 51));
        supplier_print.setStartGradientColor(new java.awt.Color(0, 102, 255));
        supplier_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(roundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(supplier_print, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roundPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addComponent(roundPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(supplier_print, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(roundPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 724, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void S_Add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_Add_btnActionPerformed
        // TODO add your handling code here:
        String Supplier_ID = SID_show.getText();
        String Supplier_Name = SName.getText();
        String Supplier_NIC = SNIC.getText();
        String Supplier_Address = SAddress.getText();
        String Supplier_Email = SEmail.getText();
        String Supplier_Contact = SContact.getText();
        
        try {

            if (Supplier_Name.isEmpty() && Supplier_NIC.isEmpty() && Supplier_Address.isEmpty() && Supplier_Email.isEmpty() && Supplier_Contact.isEmpty()) {

                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");

                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");

                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");

                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number ");

                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");
                
                InformTimer.startTimer(Supname, 3000);
                InformTimer.startTimer(Snic, 3000);
                InformTimer.startTimer(Saddress, 3000);
                InformTimer.startTimer(Scnumber, 3000);
                InformTimer.startTimer(Semail, 3000);
                

            } else if (!Supplier_Name.isEmpty() && Supplier_NIC.isEmpty() && Supplier_Address.isEmpty() && Supplier_Email.isEmpty() && Supplier_Contact.isEmpty()) {
                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");
                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");
                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number ");
                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");
                
                InformTimer.startTimer(Snic, 2000);
                InformTimer.startTimer(Saddress, 2000);
                InformTimer.startTimer(Scnumber, 2000);
                InformTimer.startTimer(Semail, 2000);

            } else if (!Supplier_NIC.isEmpty() && Supplier_Address.isEmpty() && Supplier_Email.isEmpty() && Supplier_Contact.isEmpty() && Supplier_Name.isEmpty()) {
                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");
                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");
                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number ");
                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");
                
                InformTimer.startTimer(Supname, 2000);
                InformTimer.startTimer(Saddress, 2000);
                InformTimer.startTimer(Scnumber, 2000);
                InformTimer.startTimer(Semail, 2000);

            } else if (!Supplier_Address.isEmpty() && Supplier_NIC.isEmpty() && Supplier_Email.isEmpty() && Supplier_Contact.isEmpty() && Supplier_Name.isEmpty()) {
                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");
                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");
                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number ");
                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");               
                InformTimer.startTimer(Supname, 3000);
                InformTimer.startTimer(Snic, 3000);
                InformTimer.startTimer(Scnumber, 3000);
                InformTimer.startTimer(Semail, 3000);

            } else if (!Supplier_Email.isEmpty() && Supplier_Contact.isEmpty() && Supplier_Name.isEmpty() && Supplier_Address.isEmpty() && Supplier_NIC.isEmpty()) {
                
                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");
                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");
                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");
                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number");               
                InformTimer.startTimer(Supname, 3000);
                InformTimer.startTimer(Snic, 3000);
                InformTimer.startTimer(Saddress, 3000);
                InformTimer.startTimer(Scnumber, 3000);

            }else if(!Supplier_Contact.isEmpty() && Supplier_Name.isEmpty() && Supplier_Address.isEmpty() && Supplier_NIC.isEmpty() && Supplier_Email.isEmpty()) {
                
                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");
                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");
                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");
                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");                
                InformTimer.startTimer(Supname, 3000);
                InformTimer.startTimer(Snic, 3000);
                InformTimer.startTimer(Saddress, 3000);        
                InformTimer.startTimer(Semail, 3000);
                
            } else if (Supplier_Name.isEmpty()) {
                Supname.setForeground(Color.red);
                Supname.setText("Please Enter Name");
                InformTimer.startTimer(Supname, 2000);

            } else if (Supplier_NIC.isEmpty()) {
                Snic.setForeground(Color.red);
                Snic.setText("Please Enter NIC");
                InformTimer.startTimer(Snic, 2000);

            } else if (Supplier_Address.isEmpty()) {
                Saddress.setForeground(Color.red);
                Saddress.setText("Please Enter Address");
                InformTimer.startTimer(Saddress, 2000);
                
            }else if (Supplier_Email.isEmpty()) {
                Semail.setForeground(Color.red);
                Semail.setText("Please Enter Email");
                InformTimer.startTimer(Semail, 2000);
                
            }else if (Supplier_Contact.isEmpty()) {
                Scnumber.setForeground(Color.red);
                Scnumber.setText("Please Enter Contact Number");
                InformTimer.startTimer(Scnumber, 2000);

            } else {

                Statement save = CarCare_DB.MyCon().createStatement();
                save.executeUpdate("INSERT INTO suppliers (Name, Address,NIC,Contact_No,Email) VALUES ('" + Supplier_Name + "','" + Supplier_Address + "','" + Supplier_NIC + "','" + Supplier_Contact + "','" + Supplier_Email + "')");

                SID_show.setText(Supplier_ID);
                SName.setText("");
                SNIC.setText("");
                SAddress.setText("");
                SEmail.setText("");
                SContact.setText("");

                Notification notify = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, "Supplier Added Successfully !");
                notify.showNotification();

                stb();
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
                    
    }//GEN-LAST:event_S_Add_btnActionPerformed

    private void S_Update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_Update_btnActionPerformed
        // TODO add your handling code here:
        String Supplier_ID = SID_show.getText();
        String Supplier_Name = SName.getText();
        String Supplier_NIC = SNIC.getText();
        String Supplier_Address = SAddress.getText();
        String Supplier_Email = SEmail.getText();
        String Supplier_Contact = SContact.getText();
        
        try {

            Statement update = CarCare_DB.MyCon().createStatement();
            update.executeUpdate("UPDATE suppliers SET Name ='"+Supplier_Name+"',Address='"+Supplier_Address+"',NIC='"+Supplier_NIC+"',Contact_No='"+Supplier_Contact+"',Email='"+Supplier_Email+"' WHERE Supplier_ID = '"+Supplier_ID+"' ");
            
            Notification notify = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.UPDATE, Notification.Location.TOP_CENTER, "Supplier Updated Successfully !");
            notify.showNotification();
            
            stb();
           
        } catch (SQLException e) {
            
            System.out.println(e);
        }
    }//GEN-LAST:event_S_Update_btnActionPerformed

    private void S_Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S_Delete_btnActionPerformed
        // TODO add your handling code here:
        String Supplier_ID = SID_show.getText();
        try {

            Statement delete = CarCare_DB.MyCon().createStatement();
            delete.executeUpdate("DELETE FROM suppliers WHERE Supplier_ID ='"+Supplier_ID+"' ");
            
            SID_show.setText("");
            SName.setText("");
            SNIC.setText("");
            SAddress.setText("");
            SEmail.setText("");
            SContact.setText("");
            
            Notification notify = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.DELETE, Notification.Location.TOP_CENTER, "Supplier Deleted Successfully !");
            notify.showNotification();
            
            stb();
   
        } catch (SQLException e) {
            
            System.out.println(e);
        }
        
    }//GEN-LAST:event_S_Delete_btnActionPerformed

    private void Supplier_Search_BoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Supplier_Search_BoxKeyReleased
        // TODO add your handling code here:
        String sid = Supplier_Search_Box.getText();
        try {
            DefaultTableModel dt = (DefaultTableModel) S_table.getModel();
            dt.setRowCount(0);
            Statement tables = CarCare_DB.MyCon().createStatement();
            ResultSet result;
            if (sid.isEmpty()) {
                result = tables.executeQuery("SELECT * FROM suppliers");
            } else {
                result = tables.executeQuery("SELECT * FROM suppliers WHERE Supplier_ID LIKE '%" + sid + "%'");
            }
            while (result.next()) {
                Vector v = new Vector();
                v.add(result.getString((1)));
                v.add(result.getString((2)));
                v.add(result.getString((3)));
                v.add(result.getString((4)));
                v.add(result.getString((5)));
                v.add(result.getString((6)));
                dt.addRow(v);
                
                
                SID_show.setText(result.getString("Supplier_ID"));
                SName.setText(result.getString("Name"));
                SAddress.setText(result.getString("Address"));
                SNIC.setText(result.getString("NIC"));
                SContact.setText(result.getString("Contact_No"));
                SEmail.setText(result.getString("Email"));
            }
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(S_table.getModel());
            S_table.setRowSorter(sorter);
            if (!sid.isEmpty()) {
                sorter.setRowFilter(RowFilter.regexFilter("(?i)" + sid)); // Case-insensitive filter
            }
        } catch (Exception e) {
            e.printStackTrace(); // Handle exceptions appropriately in your application
        }
    }//GEN-LAST:event_Supplier_Search_BoxKeyReleased

    private void S_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_S_tableMouseClicked
        // TODO add your handling code here:
        int S_show = S_table.getSelectedRow();
        
        String S_id = S_table.getValueAt(S_show, 0).toString();
        String S_name = S_table.getValueAt(S_show, 1).toString();
        String S_nic = S_table.getValueAt(S_show, 2).toString();
        String S_address = S_table.getValueAt(S_show, 3).toString(); 
        String S_contact = S_table.getValueAt(S_show, 4).toString();
        String S_email = S_table.getValueAt(S_show, 5).toString();
        
        SID_show.setText(S_id);
        SName.setText(S_name);
        SAddress.setText(S_address);
        SNIC.setText(S_nic);
        SContact.setText(S_contact);
        SEmail.setText(S_email);
    }//GEN-LAST:event_S_tableMouseClicked

    private void supplier_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_printActionPerformed
        // TODO add your handling code here:
        supplier_Report.GetDataJTable();
        supplier_Report.exportExcel(S_table);
        Notification notify = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.PRINT, Notification.Location.TOP_CENTER, "Supplier Report Printed Successfully !");
        notify.showNotification();
    }//GEN-LAST:event_supplier_printActionPerformed

    private void SNICFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SNICFocusLost
        // TODO add your handling code here:
        String supplierNIC = SNIC.getText();

        if (supplierNIC.isEmpty()) {
            // Handle empty NIC input
            SNIC.setLineColor(Color.RED);
            Snic.setForeground(Color.RED);
            Snic.setText("Please Enter the NIC");
            
        } else if (!supplierNIC.isEmpty() && RegX.validateNIC(supplierNIC)) {
            if(RegX.isNICExistsInDatabase(supplierNIC)){
                // NIC format is valid
                SNIC.setLineColor(Color.ORANGE);
                Snic.setForeground(Color.ORANGE);
                Snic.setText("NIC already exists");
            
            }else{
            
                SNIC.setLineColor(Color.GREEN);
                Snic.setForeground(Color.GREEN);
                Snic.setText("Valid NIC");
            }                      
        }else{
        
            SNIC.setLineColor(Color.RED);
            Snic.setForeground(Color.RED);
            Snic.setText("Invalid NIC");
        }
        InformTimer.startTimer(Snic, 3000);
            
    }//GEN-LAST:event_SNICFocusLost

    private void SNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SNameFocusLost
        // TODO add your handling code here:
        String Supplier_name = SName.getText();
           
        if(Supplier_name.isEmpty()){
            SName.setLineColor(Color.RED);
            Supname.setForeground(Color.RED);
            Supname.setText("Please Enter Name");             
        }else{
        
            
        }
        InformTimer.startTimer(Supname, 3000);
    }//GEN-LAST:event_SNameFocusLost

    private void SAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SAddressFocusLost
        // TODO add your handling code here:
        String Supplier_address = SAddress.getText();
           
        if(Supplier_address.isEmpty()){
            SAddress.setLineColor(Color.RED);
            Saddress.setForeground(Color.RED);
            Saddress.setText("Please Enter Address");             
        }
        InformTimer.startTimer(Saddress, 3000);
    }//GEN-LAST:event_SAddressFocusLost

    
    private void SContactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SContactFocusLost
        // TODO add your handling code here:
        String Supplier_contact = SContact.getText();
        
        if (Supplier_contact.isEmpty()) {
            SContact.setLineColor(Color.RED);
            Scnumber.setForeground(Color.RED);
            Scnumber.setText("Please Enter Contact Number");
            
        } else if(!Supplier_contact.isEmpty() && RegX.validateContact(Supplier_contact)){
            if(RegX.isSupplierExists(Supplier_contact, "Contact_No")){  
                SContact.setLineColor(Color.ORANGE);
                Scnumber.setForeground(Color.ORANGE);
                Scnumber.setText("Contact Number Already Exsist");
                
            }else{           
                SContact.setLineColor(Color.GREEN);
                Scnumber.setForeground(Color.GREEN);
                Scnumber.setText("Valid Contact Number");
            }            
        } else{
            SContact.setLineColor(Color.RED);
            Scnumber.setForeground(Color.RED);
            Scnumber.setText("Invalid Contact Number"); 
        }                 
        InformTimer.startTimer(Scnumber, 3000);      
    }//GEN-LAST:event_SContactFocusLost

    private void SEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SEmailFocusLost
        // TODO add your handling code here:
        String Supplier_email = SEmail.getText().trim();
        
        if (Supplier_email.isEmpty()) {
            SEmail.setLineColor(Color.RED);
            Semail.setForeground(Color.RED);
            Semail.setText("Please Enter Email");
            
        } else if(!Supplier_email.isEmpty() && RegX.validateEmail(Supplier_email)){
            if(RegX.isSupplierExists(Supplier_email, "Email")){  
                SEmail.setLineColor(Color.ORANGE);
                Semail.setForeground(Color.ORANGE);
                Semail.setText("Email Already Exsist");
                InformTimer.startTimer(Semail, 4000);
            }else{           
                SEmail.setLineColor(Color.GREEN);
                Semail.setForeground(Color.GREEN);
                Semail.setText("Valid Email");
            }            
        } else{
            SEmail.setLineColor(Color.RED);
            Semail.setForeground(Color.RED);
            Semail.setText("Invalid Email"); 
        }                 
        InformTimer.startTimer(Semail, 5000);
    }//GEN-LAST:event_SEmailFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private textfield.TextField SAddress;
    private textfield.TextField SContact;
    private textfield.TextField SEmail;
    private javax.swing.JLabel SID_show;
    private javax.swing.JLabel SID_text;
    private textfield.TextField SNIC;
    private textfield.TextField SName;
    private Menus.Button S_Add_btn;
    private Menus.Button S_Delete_btn;
    private Menus.Button S_Update_btn;
    private javax.swing.JTable S_table;
    private javax.swing.JLabel Saddress;
    private javax.swing.JLabel Scnumber;
    private javax.swing.JLabel Semail;
    private javax.swing.JLabel Snic;
    private javax.swing.JLabel Supname;
    private Menus.custom_textfield Supplier_Search_Box;
    private javax.swing.JScrollPane jScrollPane1;
    private Menus.RoundPanel roundPanel1;
    private Menus.RoundPanel roundPanel2;
    private Menus.RoundPanel roundPanel3;
    private Menus.GradientButton supplier_print;
    // End of variables declaration//GEN-END:variables
}
